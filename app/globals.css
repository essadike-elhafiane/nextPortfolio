@tailwind base;
@tailwind components;
@tailwind utilities;



::selection {
  color: #5FEAD6; 
  background: rgba(56, 178, 172, 0.2);
}
:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
  --tw-bg-opacity: 1;
  --bg-color: rgb(15 23 42/var(--tw-bg-opacity));
  --text-color : rgb(226 232 240);
  --text-color--op : rgb(226 232 240/.6);
  --text-special : #5FEAD6;
}

.TextColor{
  color: var(--text-color--op);
}

.TextNormalColor{
  color: var(--text-color);
}

.TextSpecialColor{
  color: var(--text-special);
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

html {
  scroll-behavior: smooth;
}

body {
  color: rgb(var(--foreground-rgb));
  background:var(--bg-color);
    overflow: hidden;
    color: var(--text-color);
    scrollbar-width: thin; /* Makes the scrollbar thinner */
    scrollbar-color: var(--text-color--op) var(--bg-color);
    
}

::-webkit-scrollbar {
  width: 6px; /* Width of the scrollbar */
}


@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

.bgColor {
    background-color: rgb(15 23 42/var(--tw-bg-opacity));
}

.tracking-effect {
  position: fixed; /* Use fixed if you want it to follow the cursor */
  width: 200px; /* Size of the circle */
  height: 200px; /* Size of the circle */
  border-radius: 50%;
  background-color: #101f42d4; /* Dark blue color */
  filter: blur(10px);
  opacity: .7;
  /* border: 50px solid #101f4253; Border color */
  box-shadow: 0 0 300px 300px #101f42d4; /* The glow effect */
  pointer-events: none; /* Make sure the circle doesn't prevent clicking on elements */
  transform: translate(-50%, -50%); /* Center the circle on the cursor */
  transition: transform 0.01s linear, width 0.01s linear, height 0.01s linear;
  /* background-color: white; */
}

.ActiveSection {
  display: inline-block;
  color: var(--text-special);
  text-decoration: none;
  position: relative; /* Add position relative for proper positioning of ::after pseudo-element */
}

.ActiveSection::after {
  content: '';
  position: absolute; /* Position the ::after pseudo-element absolutely */
  bottom: -10px; /* Adjust the position to align with the bottom border */
  left: 0;
  width: 100%;
  height: 2px;
  background: var(--text-special);
  transition: width .3s; /* Initial transition */
}

.ActiveSection:hover::after,
.ActiveSection:focus::after {
  width: 100%; /* Triggered width change on hover/focus */
  transition: width .8s; /* Adjust transition duration */
}

.buttonAnimation {
  padding: .8em 2em;
  width: 140px;
  cursor: pointer;
  transition: all 0.3s ease-in-out;
  border: 1px solid var(--text-special);
  box-shadow: 0 0 0 0 var(--text-special);
}

.buttonAnimation:hover {
  transform: translateY(-4px) translateX(-2px);
  box-shadow: 2px 5px 0 0 var(--text-special);
}


.buttonAnimation:active {
  transform: translateY(2px) translateX(1px);
  box-shadow: 0 0 0 0 var(--text-special);
};

.inputGroup {
  font-family: 'Segoe UI', sans-serif;
  margin: 1em 0 1em 0;
  max-width: 190px;
  position: relative;
}

.inputGroup .Inputt {
  font-size: 100%;
  padding: 0.8em;
  outline: none;
  border: 1px solid var(--text-special);
  background-color: transparent;
  border-radius: 10px;
  width: 100%;
}

.inputGroup label {
  font-size: 100%;
  position: absolute;
  /* background-color: red; */
  left: 0;
  /* top: 0; */
  padding: 0.8em;
  /* margin-left: 0.5em; */
  pointer-events: none;
  transition: all 0.3s ease;
  color: var(--text-color--op);
}

.inputGroup :is(.Inputt:focus, .Inputt:valid)~label {
  transform: translateY(-78%) translateX(-1.6em) scale(.9);
  margin: 0em;
  margin-left: 1.3em;
  padding: 0.4em;
  background-color: transparent;
  color: var(--text-special);
}

.inputGroup :is(.Inputt:focus, .Inputt:valid) {
  border-color: rgba(56, 178, 172, 0.206);
}

/* button */
button {
  font-family: inherit;
  font-size: 20px;
  /* background: royalblue; */

  color: var(--text-special);
  padding: 0.7em 1em;
  padding-left: 0.9em;
  display: flex;
  align-items: center;
  border: none;
  border-radius: 16px;
  overflow: hidden;
  transition: all 0.2s;
  cursor: pointer;
  padding: .8em 2em;
  width: 120px;
}

button span {
  display: block;
  margin-left: 0.3em;
  transition: all 0.3s ease-in-out;
}

button svg {
  display: block;
  transform-origin: center center;
  transition: transform 0.3s ease-in-out;
}

button:hover .svg-wrapper {
  animation: fly-1 0.6s ease-in-out infinite alternate;
}

button:hover svg {
  transform: translateX(1.2em) rotate(45deg) scale(1.1);
}

button:hover span {
  transform: translateX(5em);
}

button:active {
  transform: scale(0.95);
}

@keyframes fly-1 {
  from {
    transform: translateX(0.1em);
  }

  to {
    transform: translateX(-0.1em);
  }
}


.containerNav{
  display: flex;
  justify-content: space-between;
  align-items: center;
  /* padding: 1em 2em; */
  right: 20px;
  
  
}
@media (max-width: 768px){
  .containerNav{
    right: 10px;
  }
}

.containerNav a{
  background-color: var(--bg-color);
  border-bottom: 1px solid #050505;
  min-width: 130px;
  font-weight: 800;
}

.containerNav a:hover{
  /* color: var(--text-special); */
  border-bottom: none;
  min-width: 130px;
  font-weight: 100;
}

.containerNav :nth-child(1){
  border-top-right-radius: 5px;
  border-top-left-radius: 5px;
}

.containerNav :last-child{
  border-bottom-right-radius: 5px;
  border-bottom-left-radius: 5px;
}


/* Path: app/components/Navbar.js */

.FontMon{
  font-family: monospace;
}



a {
  display: inline-blesock;
  color: inherit;
  text-decoration: none;
  text-decoration-skip-ink: auto;
}

button {
  border: 0;
  outline: 0;
  cursor: pointer;
}

ul,
ol {
  padding: 0;
  margin: 0;
  list-style: none;
}

svg {
  width: 100%;
  height: 100%;
  fill: currentColor;
}

img {
  width: 100%;
  max-width: 100%;
  vertical-align: middle;
}

.project-container {
  max-width: 1000px;
  
}

.project {
  margin: 30px;
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(6, 1fr);
  align-items: center;
  
  @media screen and (max-width: 768px) {
    align-items: flex-start;
  }
}

.project-content {
  position: relative;
  grid-column: 1 / 7;
  grid-row: 1 / -1;

  @include tablet {
    grid-column: 1 / -1;
    padding: 40px;
  }

  .project-label {
    color: #64ffda;
    font-family: monospace;
  }
  .project-title {
    font-size: 2rem;
    margin: 10px 0 30px;
    color: #eee;
  }
  .project-details {
    font-size: 15px;
    line-height: 1.5;
    color: #aaa;

    p {
      background-color: #252525;
      padding: 20px 25px;
      @include tablet {
        background-color: transparent;
        padding: 20px 0;
      }
    }

    ul {
      display: flex;
      margin-top: 20px;

      li {
        margin-right: 20px;
        color: #aaa;
        font-family: monospace;
      }
    }
  }
}




.each-slide-effect > div {
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  background-size: cover;
  height: 350px;
}

.each-slide-effect span {
  padding: 20px;
  font-size: 20px;
  background: #efefef;
  text-align: center;
}


.overlay {
 opacity: .6;
}

.ConatinerPrj:hover .overlay {
  opacity: 1;
}

.Clicked{
  padding: 0.8em 2em;
  border-bottom: 2px solid transparent;
  border-left: 2px solid transparent;
}

.Clicked:hover{
  color: var(--text-special);
  background-color: #112240;
  padding: 0.8em 2em;
}

.SelectedSkillsP{
  color: var(--text-special);
  background-color: #112240;
  border-bottom: 2px solid var(--text-special);
  transition: all .5s ease;
}

.SelectedSkills{
  color: var(--text-special);
  background-color: #112240;
  border-left: 2px solid var(--text-special);
  transition: all .5s ease;
}

.borderBottom{
  border-bottom: 2px solid #112240;
}

.borderLeft{
  border-left: 2px solid #112240;
}


@keyframes slideInFromLeft {
  0% {
    opacity: 0;
    transform: translateX(20%);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.SlideAnimation {
  opacity: 0; /* Start with opacity 0 */
  animation: slideInFromLeft 0.5s ease forwards; /* Apply the animation */
}